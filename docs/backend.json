
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user's public profile information.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The user's unique ID from Firebase Authentication."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        }
      },
      "required": ["uid", "email", "displayName"]
    },
    "UserRole": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "User Role",
        "type": "object",
        "description": "Represents a user's role in the application.",
        "properties": {
            "role": {
                "type": "string",
                "description": "The user's role.",
                "enum": ["admin", "editor"]
            }
        },
        "required": ["role"]
    },
    "Sector": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Sector",
      "type": "object",
      "description": "Represents a physical or logical area in the plant.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sector."
        }
      },
      "required": ["name"]
    },
    "Machine": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Machine",
      "type": "object",
      "description": "Represents a machine within a sector.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the machine."
        },
        "sectorId": {
          "type": "string",
          "description": "The ID of the sector this machine belongs to."
        }
      },
      "required": ["name", "sectorId"]
    },
    "InventoryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InventoryItem",
      "type": "object",
      "description": "Represents a specific type of item in the inventory.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name or code of the item."
        },
        "stock": {
          "type": "number",
          "description": "The current quantity in stock."
        },
        "threshold": {
          "type": "number",
          "description": "The minimum quantity of this item that should be in stock."
        }
      },
      "required": ["name", "stock", "threshold"]
    },
    "MachineAssignment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MachineAssignment",
      "type": "object",
      "description": "Represents the assignment of a specific quantity of an inventory item to a machine.",
      "properties": {
        "sectorId": {
          "type": "string",
          "description": "Reference to the Sector's ID."
        },
        "machineId": {
          "type": "string",
          "description": "Reference to the Machine's ID."
        },
        "itemId": {
          "type": "string",
          "description": "Reference to the InventoryItem's ID."
        },
        "itemName": {
          "type": "string",
          "description": "The name of the assigned item (denormalized for easier display)."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity required for that machine."
        }
      },
      "required": ["sectorId", "machineId", "itemId", "itemName", "quantity"]
    },
    "UsageLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UsageLog",
      "type": "object",
      "description": "Represents a record of item usage by a machine.",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Reference to the InventoryItem's ID."
        },
        "itemName": {
          "type": "string",
          "description": "The name of the used item."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item used."
        },
        "date": {
          "type": "string",
          "description": "The ISO date and time when the item was used."
        },
        "sectorId": {
          "type": "string",
          "description": "The sector where the item was used."
        },
        "machineId": {
          "type": "string",
          "description": "The machine that used the item."
        }
      },
      "required": ["itemId", "itemName", "quantity", "date", "sectorId", "machineId"]
    }
  },
  "auth": {
    "providers": ["password"]
  },
  "firestore": {
    "structure": [
      {
        "path": "users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores public user profile information.",
          "params": [{"name": "userId", "description": "Matches the user's Firebase Auth UID."}]
        }
      },
       {
        "path": "roles/{userId}",
        "definition": {
          "entityName": "UserRole",
          "schema": {
            "$ref": "#/backend/entities/UserRole"
          },
          "description": "Stores the role for a given user.",
          "params": [{"name": "userId", "description": "Matches the user's Firebase Auth UID."}]
        }
      },
      {
        "path": "sectors/{sectorId}",
        "definition": {
          "entityName": "Sector",
          "schema": {
            "$ref": "#/backend/entities/Sector"
          },
          "description": "Stores all sectors. Read-only for all users, writeable by admins.",
          "params": [{"name": "sectorId", "description": "The unique ID of the sector."}]
        }
      },
      {
        "path": "sectors/{sectorId}/machines/{machineId}",
        "definition": {
          "entityName": "Machine",
          "schema": {
            "$ref": "#/backend/entities/Machine"
          },
          "description": "Stores all machines within a sector. Read-only for all users, writeable by admins.",
          "params": [
            {"name": "sectorId", "description": "The unique ID of the parent sector."},
            {"name": "machineId", "description": "The unique ID of the machine."}
          ]
        }
      },
      {
        "path": "inventory/{inventoryId}",
        "definition": {
          "entityName": "InventoryItem",
          "schema": {
            "$ref": "#/backend/entities/InventoryItem"
          },
          "description": "Stores all shared inventory items. Read-only for all users, writeable by editors and admins.",
          "params": [{"name": "inventoryId", "description": "The unique ID of the inventory item."}]
        }
      },
      {
        "path": "machineAssignments/{assignmentId}",
        "definition": {
          "entityName": "MachineAssignment",
          "schema": {
            "$ref": "#/backend/entities/MachineAssignment"
          },
          "description": "Stores all shared machine assignments. Read-only for all users, writeable by editors and admins.",
          "params": [{"name": "assignmentId", "description": "The unique ID of the machine assignment."}]
        }
      },
      {
        "path": "usageLog/{usageLogId}",
        "definition": {
          "entityName": "UsageLog",
          "schema": {
            "$ref": "#/backend/entities/UsageLog"
          },
          "description": "Stores the shared history of item usage. Read-only for all users, createable by editors and admins.",
          "params": [{"name": "usageLogId", "description": "The unique ID of the usage log record."}]
        }
      }
    ],
    "reasoning": "The application requires a role-based access model. A 'users' collection stores roles ('admin' or 'editor'). Admins can manage the plant structure (sectors, machines) and users. Editors can manage inventory and log usage. All authenticated users can read all data to maintain visibility."
  }
}

    