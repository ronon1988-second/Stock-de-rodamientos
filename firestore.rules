
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read their own profile and admins can read anyone's profile.
    match /users/{userId} {
      allow get: if request.auth.uid == userId || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
      allow list: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }
    
    // Users can read their own role. Admins can update roles.
    match /roles/{userId} {
      allow get: if request.auth.uid == userId || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
      allow list: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
      allow create, update: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
    }

    // Authenticated users can read general data.
    // Editors and Admins can modify it.
    match /inventory/{itemId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    match /sectors/{sectorId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    match /sectors/{sectorId}/machines/{machineId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    match /machineAssignments/{assignmentId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role in ['admin', 'editor'];
    }

    match /usageLog/{logId} {
       allow read: if request.auth != null;
       // Allow any authenticated user to log usage.
       allow create: if request.auth != null;
    }
  }
}
